version: "3"

services:
  web-prod-server:
    build:
      context: ./
      dockerfile: ./Docker/Dockerfile-prod
    ports: 
      - "3000"
    expose: 
      - "3000"
    env_file: 
      - ./env_files/prod.env
    deploy:
      restart_policy:
        condition: on-failure # no, always, unless-stopped
        delay: 5s
        max_attempts: 3
        window: 120s
    links: 
      - prod_db
    command: 
      sh -c 'npm start'
    networks: 
     - application
  
  web-dev-server:
    build:
      context: ./
      dockerfile: ./Docker/Dockerfile-dev
    ports: 
      - "3100"
    expose: 
      - "3100"
    env_file: 
      - ./env_files/dev.env
    deploy:
      restart_policy:
        condition: on-failure # no, always, unless-stopped
        delay: 5s
        max_attempts: 3
        window: 120s
    links: 
      - dev_db
    command: 
      sh -c 'npm start'
    networks: 
     - application
  
  prod_db:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'prod'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-prod-db:/var/lib/mysql
    networks: 
     - application
  
  dev_db:
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'dev'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-dev-db:/var/lib/mysql
    networks: 
     - application
  
volumes:
  my-prod-db:
  my-dev-db:

networks:
  application: